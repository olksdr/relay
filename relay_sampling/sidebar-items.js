window.SIDEBAR_ITEMS = {"enum":[["DecayingFunction","A decaying function definition."],["RuleCondition","A condition from a sampling rule."],["RuleType","Defines the type of dynamic rule, i.e. to which type of events it will be applied and how."],["SamplingMode","Defines which population of items a dynamic sample rate applies to."],["SamplingValue","A sampling strategy definition."]],"fn":[["merge_rules_from_configs","Returns an iterator of references that chains together and merges rules."],["pseudo_random_from_uuid","Generates a pseudo random number by seeding the generator with the given id."]],"struct":[["ActiveRule","A sampling rule that has been successfully matched and that contains all the required data to return the sample rate."],["AndCondition","And condition combinator."],["CustomCondition","Condition that cover custom operators which need special handling and have a custom implementation for each case."],["DynamicSamplingContext","DynamicSamplingContext created by the first Sentry SDK in the call chain."],["EqCondOptions","A condition that checks the values using the equality operator."],["EqCondition","A condition that checks for equality"],["GlobCondition","A condition that uses glob matching."],["GtCondition",""],["GteCondition",""],["LtCondition",""],["LteCondition",""],["MatchedRuleIds","Represents a list of rule ids which is used for outcomes."],["NotCondition","Not condition combinator."],["OrCondition","Or condition combinator."],["RuleId","Sampling rule Id"],["SamplingConfig","Represents the dynamic sampling configuration available to a project."],["SamplingMatch","Represents the specification for sampling an incoming event."],["SamplingRule","A sampling rule as it is deserialized from the project configuration."],["TimeRange","A range of time."],["TraceUserContext","The User related information in the trace context"]],"trait":[["FieldValueProvider","Trait implemented by providers of fields (Events and Trace Contexts)."]]};