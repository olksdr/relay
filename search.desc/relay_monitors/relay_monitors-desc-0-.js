searchState.loadedDescShard("relay_monitors", 0, "Monitors protocol and processing for Sentry.\nThe monitor check-in payload.\nAny contexts sent in the check-in payload.\nDescribes the status of the incoming CheckIn.\nThe trace context sent with a check-in.\nMonitor slug was empty after slugification.\nCheck-in failed or otherwise had some issues.\nCheck-in is expectred to complete.\nEnvironment name was invalid.\nFailed to deserialize the payload.\nMonitor did not check in on time.\nThe monitor configuration payload for upserting monitors …\nCheck-in had no issues during execution.\nError returned from <code>process_check_in</code>.\nThe result from calling process_check_in\nNo status was passed.\nUnique identifier of this check-in.\nContexts describing the associated environment of the job …\nDuration of this check since it has started in seconds.\nThe environment to associate the check-in with\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmonitor configuration to support upserts.\nIdentifier of the monitor for this check-in.\nThe JSON payload of the processed check-in.\nNormalizes a monitor check-in payload.\nThe routing key to be used for the check-in payload.\nStatus of this check-in. Defaults to <code>&quot;unknown&quot;</code>.")